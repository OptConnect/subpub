
/*
 * 
 */

package com.ecollege.prospero.wsdl.delivery;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.9
 * Tue Jul 27 16:04:01 MDT 2010
 * Generated source version: 2.2.9
 * 
 */


@WebServiceClient(name = "DeliveryService", 
                  wsdlLocation = "file:/home/chrisch/Desktop/delivery.wsdl",
                  targetNamespace = "http://delivery.wsdl.prospero.ecollege.com") 
public class DeliveryService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://delivery.wsdl.prospero.ecollege.com", "DeliveryService");
    public final static QName DeliveryServiceHttpEndpoint = new QName("http://delivery.wsdl.prospero.ecollege.com", "DeliveryServiceHttpEndpoint");
    public final static QName DeliveryServiceHttpSoap11Endpoint = new QName("http://delivery.wsdl.prospero.ecollege.com", "DeliveryServiceHttpSoap11Endpoint");
    public final static QName DeliveryServiceHttpSoap12Endpoint = new QName("http://delivery.wsdl.prospero.ecollege.com", "DeliveryServiceHttpSoap12Endpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/chrisch/Desktop/delivery.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/chrisch/Desktop/delivery.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public DeliveryService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DeliveryService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DeliveryService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpEndpoint")
    public DeliveryServicePortType getDeliveryServiceHttpEndpoint() {
        return super.getPort(DeliveryServiceHttpEndpoint, DeliveryServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpEndpoint")
    public DeliveryServicePortType getDeliveryServiceHttpEndpoint(WebServiceFeature... features) {
        return super.getPort(DeliveryServiceHttpEndpoint, DeliveryServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpSoap11Endpoint")
    public DeliveryServicePortType getDeliveryServiceHttpSoap11Endpoint() {
        return super.getPort(DeliveryServiceHttpSoap11Endpoint, DeliveryServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpSoap11Endpoint")
    public DeliveryServicePortType getDeliveryServiceHttpSoap11Endpoint(WebServiceFeature... features) {
        return super.getPort(DeliveryServiceHttpSoap11Endpoint, DeliveryServicePortType.class, features);
    }
    /**
     * 
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpSoap12Endpoint")
    public DeliveryServicePortType getDeliveryServiceHttpSoap12Endpoint() {
        return super.getPort(DeliveryServiceHttpSoap12Endpoint, DeliveryServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DeliveryServicePortType
     */
    @WebEndpoint(name = "DeliveryServiceHttpSoap12Endpoint")
    public DeliveryServicePortType getDeliveryServiceHttpSoap12Endpoint(WebServiceFeature... features) {
        return super.getPort(DeliveryServiceHttpSoap12Endpoint, DeliveryServicePortType.class, features);
    }

}
